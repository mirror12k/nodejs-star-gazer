#!/usr/bin/env node

var fs = require('fs');
// var process = require('process');

var ssh2 = require('ssh2');
var yaml = require('js-yaml');



var config_file = 'star-gazer.yaml';


var config_data;
if (fs.existsSync(config_file)) {
	config_data = yaml.safeLoad(fs.readFileSync(config_file, 'utf8'));
} else {
	console.log("warning: no config file found at '" + config_file + "'");
	config_data = {};
}



// fs.writeFileSync(config_file, yaml.safeDump(config_data), { 'encoding': 'utf8' });


function connect_ssh_client(credentials) {
	var conn = new ssh2.Client();
	conn.on('ready', function() {
		console.log('connected!');
		conn.shell(function(err, stream) {
			if (err) throw err;
			console.log('stream opened');

			stream.pipe(process.stdout);
			process.stdin.pipe(stream);

			stream.on('close', function() {
				console.log('stream closed');
				conn.end();
				process.exit(0);
			});
		});
	}).connect({
		host: credentials.host,
		port: credentials.port,
		username: credentials.username,
		password: credentials.password,
		// privateKey: require('fs').readFileSync('/here/is/my/key')
	});
}

function list_credentials() {
	for (var server_name in config_data.credentials) {
		var credentials = config_data.credentials[server_name];
		console.log("[" + credentials.credential_type + "] " + server_name);
		console.log("\t" + credentials.host + ":" + credentials.port);
	}
}
function open_connection(name) {
	var credentials = config_data.credentials[name];
	if (credentials !== undefined) {
		console.log('connecting to ' + name + '...')
		connect_ssh_client(credentials);
	} else {
		console.log("error: no credentials found for '" + name + "'");
	}
}


if (process.argv.length < 3) {
	console.log('usage:\
		star-gazer <list | connect>');
} else {
	var command = process.argv[2];
	if (command === 'list') {
		list_credentials();
	} else if (command === 'connect') {
		open_connection(process.argv[3]);
	} else {
		console.log("unknown command: " + command);
	}
}


